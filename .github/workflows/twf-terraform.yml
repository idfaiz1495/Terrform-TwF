name: 'TF Deploy AWS Example'

on:
  push:
    branches: 
      - main
  workflow_dispatch:
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ROOT_PATH: '${{ github.workspace }}/src/terraform'

jobs:
  terraform_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    # environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      # with:
       # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
       #  role-to-assume: arn:aws:iam::777978841477:role/Developer-AWS
       #  role-seesion-name: GitHub
       #  aws-region:  'ap-southeast-2'
          

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: ${{env.ROOT_PATH}}

    # Checks that all Terraform configuration files adhere to a canonical format
   # - name: Terraform Format
    #  run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false
      working-directory: ${{env.ROOT_PATH}}
    
  terraform_apply:
      name: 'Terraform Apply'
      runs-on: ubuntu-latest
      needs: [terraform_plan]
      environment: dev
  
      # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
      defaults:
        run:
          shell: bash
  
      steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
  
      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        # with:
         # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
         #  role-to-assume: arn:aws:iam::777978841477:role/Developer-AWS
         #  role-seesion-name: GitHub
         #  aws-region:  'ap-southeast-2'
            
  
      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init
        working-directory: ${{env.ROOT_PATH}}
      - name: Terraform Apply
        if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
        run: terraform apply -auto-approve 
        working-directory: ${{env.ROOT_PATH}}
  
